// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/get_model_metadata.proto

#include "tensorflow_serving/apis/get_model_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SignatureDef_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GetModelMetadataResponse_MetadataEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SignatureDefMap_SignatureDefEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fapis_2fmodel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ModelSpec_tensorflow_5fserving_2fapis_2fmodel_2eproto;
namespace tensorflow {
namespace serving {
class SignatureDefMap_SignatureDefEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignatureDefMap_SignatureDefEntry_DoNotUse> _instance;
} _SignatureDefMap_SignatureDefEntry_DoNotUse_default_instance_;
class SignatureDefMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignatureDefMap> _instance;
} _SignatureDefMap_default_instance_;
class GetModelMetadataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetModelMetadataRequest> _instance;
} _GetModelMetadataRequest_default_instance_;
class GetModelMetadataResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetModelMetadataResponse_MetadataEntry_DoNotUse> _instance;
} _GetModelMetadataResponse_MetadataEntry_DoNotUse_default_instance_;
class GetModelMetadataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetModelMetadataResponse> _instance;
} _GetModelMetadataResponse_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static void InitDefaultsSignatureDefMap_SignatureDefEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_SignatureDefMap_SignatureDefEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse();
  }
  ::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SignatureDefMap_SignatureDefEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSignatureDefMap_SignatureDefEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto}, {
      &scc_info_SignatureDef_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto.base,}};

static void InitDefaultsSignatureDefMap_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_SignatureDefMap_default_instance_;
    new (ptr) ::tensorflow::serving::SignatureDefMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::SignatureDefMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SignatureDefMap_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSignatureDefMap_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto}, {
      &scc_info_SignatureDefMap_SignatureDefEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base,}};

static void InitDefaultsGetModelMetadataRequest_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_GetModelMetadataRequest_default_instance_;
    new (ptr) ::tensorflow::serving::GetModelMetadataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::GetModelMetadataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetModelMetadataRequest_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetModelMetadataRequest_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto}, {
      &scc_info_ModelSpec_tensorflow_5fserving_2fapis_2fmodel_2eproto.base,}};

static void InitDefaultsGetModelMetadataResponse_MetadataEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_GetModelMetadataResponse_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse();
  }
  ::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetModelMetadataResponse_MetadataEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetModelMetadataResponse_MetadataEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsGetModelMetadataResponse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_GetModelMetadataResponse_default_instance_;
    new (ptr) ::tensorflow::serving::GetModelMetadataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::GetModelMetadataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetModelMetadataResponse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetModelMetadataResponse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto}, {
      &scc_info_ModelSpec_tensorflow_5fserving_2fapis_2fmodel_2eproto.base,
      &scc_info_GetModelMetadataResponse_MetadataEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base,}};

void InitDefaults_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_SignatureDefMap_SignatureDefEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignatureDefMap_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetModelMetadataRequest_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetModelMetadataResponse_MetadataEntry_DoNotUse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetModelMetadataResponse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap, signature_def_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataRequest, model_spec_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataRequest, metadata_field_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse, model_spec_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse, metadata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse)},
  { 9, -1, sizeof(::tensorflow::serving::SignatureDefMap)},
  { 15, -1, sizeof(::tensorflow::serving::GetModelMetadataRequest)},
  { 22, 29, sizeof(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse)},
  { 31, -1, sizeof(::tensorflow::serving::GetModelMetadataResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_SignatureDefMap_SignatureDefEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_SignatureDefMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_GetModelMetadataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_GetModelMetadataResponse_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_GetModelMetadataResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto = {
  {}, AddDescriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto, "tensorflow_serving/apis/get_model_metadata.proto", schemas,
  file_default_instances, TableStruct_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::offsets,
  file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto, 5, file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto, file_level_service_descriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto,
};

const char descriptor_table_protodef_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[] =
  "\n0tensorflow_serving/apis/get_model_meta"
  "data.proto\022\022tensorflow.serving\032\031google/p"
  "rotobuf/any.proto\032)tensorflow/core/proto"
  "buf/meta_graph.proto\032#tensorflow_serving"
  "/apis/model.proto\"\256\001\n\017SignatureDefMap\022L\n"
  "\rsignature_def\030\001 \003(\01325.tensorflow.servin"
  "g.SignatureDefMap.SignatureDefEntry\032M\n\021S"
  "ignatureDefEntry\022\013\n\003key\030\001 \001(\t\022\'\n\005value\030\002"
  " \001(\0132\030.tensorflow.SignatureDef:\0028\001\"d\n\027Ge"
  "tModelMetadataRequest\0221\n\nmodel_spec\030\001 \001("
  "\0132\035.tensorflow.serving.ModelSpec\022\026\n\016meta"
  "data_field\030\002 \003(\t\"\342\001\n\030GetModelMetadataRes"
  "ponse\0221\n\nmodel_spec\030\001 \001(\0132\035.tensorflow.s"
  "erving.ModelSpec\022L\n\010metadata\030\002 \003(\0132:.ten"
  "sorflow.serving.GetModelMetadataResponse"
  ".MetadataEntry\032E\n\rMetadataEntry\022\013\n\003key\030\001"
  " \001(\t\022#\n\005value\030\002 \001(\0132\024.google.protobuf.An"
  "y:\0028\001B\003\370\001\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto = {
  false, InitDefaults_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto, 
  descriptor_table_protodef_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto,
  "tensorflow_serving/apis/get_model_metadata.proto", &assign_descriptors_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto, 698,
};

void AddDescriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[3] =
  {
    ::AddDescriptors_google_2fprotobuf_2fany_2eproto,
    ::AddDescriptors_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto,
    ::AddDescriptors_tensorflow_5fserving_2fapis_2fmodel_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto, deps, 3);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto = []() { AddDescriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto(); return true; }();
namespace tensorflow {
namespace serving {

// ===================================================================

SignatureDefMap_SignatureDefEntry_DoNotUse::SignatureDefMap_SignatureDefEntry_DoNotUse() {}
SignatureDefMap_SignatureDefEntry_DoNotUse::SignatureDefMap_SignatureDefEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void SignatureDefMap_SignatureDefEntry_DoNotUse::MergeFrom(const SignatureDefMap_SignatureDefEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SignatureDefMap_SignatureDefEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto);
  return ::file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[0];
}
void SignatureDefMap_SignatureDefEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignatureDefMap_SignatureDefEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      SignatureDefMap_SignatureDefEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "tensorflow.serving.SignatureDefMap.SignatureDefEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void SignatureDefMap::InitAsDefaultInstance() {
}
class SignatureDefMap::HasBitSetters {
 public:
};

void SignatureDefMap::clear_signature_def() {
  signature_def_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignatureDefMap::kSignatureDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignatureDefMap::SignatureDefMap()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.SignatureDefMap)
}
SignatureDefMap::SignatureDefMap(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  signature_def_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.SignatureDefMap)
}
SignatureDefMap::SignatureDefMap(const SignatureDefMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_def_.MergeFrom(from.signature_def_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.SignatureDefMap)
}

void SignatureDefMap::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignatureDefMap_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
}

SignatureDefMap::~SignatureDefMap() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.SignatureDefMap)
  SharedDtor();
}

void SignatureDefMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void SignatureDefMap::ArenaDtor(void* object) {
  SignatureDefMap* _this = reinterpret_cast< SignatureDefMap* >(object);
  (void)_this;
}
void SignatureDefMap::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void SignatureDefMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignatureDefMap& SignatureDefMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignatureDefMap_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void SignatureDefMap::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.SignatureDefMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_def_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignatureDefMap::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignatureDefMap*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<string, .tensorflow.SignatureDef> signature_def = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->signature_def_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignatureDefMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.SignatureDefMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .tensorflow.SignatureDef> signature_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          SignatureDefMap_SignatureDefEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SignatureDefMap_SignatureDefEntry_DoNotUse,
              ::std::string, ::tensorflow::SignatureDef,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef > > parser(&signature_def_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.SignatureDefMap.SignatureDefEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.SignatureDefMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.SignatureDefMap)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignatureDefMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.SignatureDefMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.SignatureDef> signature_def = 1;
  if (!this->signature_def().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.SignatureDefMap.SignatureDefEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->signature_def().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->signature_def().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
          it = this->signature_def().begin();
          it != this->signature_def().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SignatureDefMap_SignatureDefEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(signature_def_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SignatureDefMap_SignatureDefEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
          it = this->signature_def().begin();
          it != this->signature_def().end(); ++it) {
        entry.reset(signature_def_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.SignatureDefMap)
}

::google::protobuf::uint8* SignatureDefMap::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.SignatureDefMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.SignatureDef> signature_def = 1;
  if (!this->signature_def().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.SignatureDefMap.SignatureDefEntry.key");
      }
    };

    if (false &&
        this->signature_def().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->signature_def().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
          it = this->signature_def().begin();
          it != this->signature_def().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SignatureDefMap_SignatureDefEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(signature_def_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<SignatureDefMap_SignatureDefEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
          it = this->signature_def().begin();
          it != this->signature_def().end(); ++it) {
        entry.reset(signature_def_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.SignatureDefMap)
  return target;
}

size_t SignatureDefMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.SignatureDefMap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .tensorflow.SignatureDef> signature_def = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->signature_def_size());
  {
    ::std::unique_ptr<SignatureDefMap_SignatureDefEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
        it = this->signature_def().begin();
        it != this->signature_def().end(); ++it) {
      if (entry.get() != nullptr && entry->GetArena() != nullptr) {
        entry.release();
      }
      entry.reset(signature_def_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != nullptr && entry->GetArena() != nullptr) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignatureDefMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.SignatureDefMap)
  GOOGLE_DCHECK_NE(&from, this);
  const SignatureDefMap* source =
      ::google::protobuf::DynamicCastToGenerated<SignatureDefMap>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.SignatureDefMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.SignatureDefMap)
    MergeFrom(*source);
  }
}

void SignatureDefMap::MergeFrom(const SignatureDefMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.SignatureDefMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signature_def_.MergeFrom(from.signature_def_);
}

void SignatureDefMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.SignatureDefMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignatureDefMap::CopyFrom(const SignatureDefMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.SignatureDefMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureDefMap::IsInitialized() const {
  return true;
}

void SignatureDefMap::Swap(SignatureDefMap* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SignatureDefMap* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SignatureDefMap::UnsafeArenaSwap(SignatureDefMap* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SignatureDefMap::InternalSwap(SignatureDefMap* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  signature_def_.Swap(&other->signature_def_);
}

::google::protobuf::Metadata SignatureDefMap::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto);
  return ::file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetModelMetadataRequest::InitAsDefaultInstance() {
  ::tensorflow::serving::_GetModelMetadataRequest_default_instance_._instance.get_mutable()->model_spec_ = const_cast< ::tensorflow::serving::ModelSpec*>(
      ::tensorflow::serving::ModelSpec::internal_default_instance());
}
class GetModelMetadataRequest::HasBitSetters {
 public:
  static const ::tensorflow::serving::ModelSpec& model_spec(const GetModelMetadataRequest* msg);
};

const ::tensorflow::serving::ModelSpec&
GetModelMetadataRequest::HasBitSetters::model_spec(const GetModelMetadataRequest* msg) {
  return *msg->model_spec_;
}
void GetModelMetadataRequest::unsafe_arena_set_allocated_model_spec(
    ::tensorflow::serving::ModelSpec* model_spec) {
  if (GetArenaNoVirtual() == nullptr) {
    delete model_spec_;
  }
  model_spec_ = model_spec;
  if (model_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.GetModelMetadataRequest.model_spec)
}
void GetModelMetadataRequest::clear_model_spec() {
  if (GetArenaNoVirtual() == nullptr && model_spec_ != nullptr) {
    delete model_spec_;
  }
  model_spec_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModelMetadataRequest::kModelSpecFieldNumber;
const int GetModelMetadataRequest::kMetadataFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModelMetadataRequest::GetModelMetadataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.GetModelMetadataRequest)
}
GetModelMetadataRequest::GetModelMetadataRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  metadata_field_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.GetModelMetadataRequest)
}
GetModelMetadataRequest::GetModelMetadataRequest(const GetModelMetadataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      metadata_field_(from.metadata_field_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_model_spec()) {
    model_spec_ = new ::tensorflow::serving::ModelSpec(*from.model_spec_);
  } else {
    model_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.GetModelMetadataRequest)
}

void GetModelMetadataRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetModelMetadataRequest_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
  model_spec_ = nullptr;
}

GetModelMetadataRequest::~GetModelMetadataRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.GetModelMetadataRequest)
  SharedDtor();
}

void GetModelMetadataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete model_spec_;
}

void GetModelMetadataRequest::ArenaDtor(void* object) {
  GetModelMetadataRequest* _this = reinterpret_cast< GetModelMetadataRequest* >(object);
  (void)_this;
}
void GetModelMetadataRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetModelMetadataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetModelMetadataRequest& GetModelMetadataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetModelMetadataRequest_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void GetModelMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.GetModelMetadataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_field_.Clear();
  if (GetArenaNoVirtual() == nullptr && model_spec_ != nullptr) {
    delete model_spec_;
  }
  model_spec_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetModelMetadataRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetModelMetadataRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tensorflow::serving::ModelSpec::_InternalParse;
        object = msg->mutable_model_spec();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated string metadata_field = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("tensorflow.serving.GetModelMetadataRequest.metadata_field");
          object = msg->add_metadata_field();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetModelMetadataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.GetModelMetadataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string metadata_field = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_metadata_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metadata_field(this->metadata_field_size() - 1).data(),
            static_cast<int>(this->metadata_field(this->metadata_field_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.GetModelMetadataRequest.metadata_field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.GetModelMetadataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.GetModelMetadataRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetModelMetadataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.GetModelMetadataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::model_spec(this), output);
  }

  // repeated string metadata_field = 2;
  for (int i = 0, n = this->metadata_field_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata_field(i).data(), static_cast<int>(this->metadata_field(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.GetModelMetadataRequest.metadata_field");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->metadata_field(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.GetModelMetadataRequest)
}

::google::protobuf::uint8* GetModelMetadataRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.GetModelMetadataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::model_spec(this), target);
  }

  // repeated string metadata_field = 2;
  for (int i = 0, n = this->metadata_field_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata_field(i).data(), static_cast<int>(this->metadata_field(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.GetModelMetadataRequest.metadata_field");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->metadata_field(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.GetModelMetadataRequest)
  return target;
}

size_t GetModelMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.GetModelMetadataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string metadata_field = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_field_size());
  for (int i = 0, n = this->metadata_field_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->metadata_field(i));
  }

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *model_spec_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetModelMetadataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.GetModelMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetModelMetadataRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetModelMetadataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.GetModelMetadataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.GetModelMetadataRequest)
    MergeFrom(*source);
  }
}

void GetModelMetadataRequest::MergeFrom(const GetModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.GetModelMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_field_.MergeFrom(from.metadata_field_);
  if (from.has_model_spec()) {
    mutable_model_spec()->::tensorflow::serving::ModelSpec::MergeFrom(from.model_spec());
  }
}

void GetModelMetadataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.GetModelMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModelMetadataRequest::CopyFrom(const GetModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.GetModelMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelMetadataRequest::IsInitialized() const {
  return true;
}

void GetModelMetadataRequest::Swap(GetModelMetadataRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetModelMetadataRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void GetModelMetadataRequest::UnsafeArenaSwap(GetModelMetadataRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetModelMetadataRequest::InternalSwap(GetModelMetadataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metadata_field_.InternalSwap(CastToBase(&other->metadata_field_));
  swap(model_spec_, other->model_spec_);
}

::google::protobuf::Metadata GetModelMetadataRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto);
  return ::file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

GetModelMetadataResponse_MetadataEntry_DoNotUse::GetModelMetadataResponse_MetadataEntry_DoNotUse() {}
GetModelMetadataResponse_MetadataEntry_DoNotUse::GetModelMetadataResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void GetModelMetadataResponse_MetadataEntry_DoNotUse::MergeFrom(const GetModelMetadataResponse_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GetModelMetadataResponse_MetadataEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto);
  return ::file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[3];
}
void GetModelMetadataResponse_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetModelMetadataResponse_MetadataEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      GetModelMetadataResponse_MetadataEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "tensorflow.serving.GetModelMetadataResponse.MetadataEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void GetModelMetadataResponse::InitAsDefaultInstance() {
  ::tensorflow::serving::_GetModelMetadataResponse_default_instance_._instance.get_mutable()->model_spec_ = const_cast< ::tensorflow::serving::ModelSpec*>(
      ::tensorflow::serving::ModelSpec::internal_default_instance());
}
class GetModelMetadataResponse::HasBitSetters {
 public:
  static const ::tensorflow::serving::ModelSpec& model_spec(const GetModelMetadataResponse* msg);
};

const ::tensorflow::serving::ModelSpec&
GetModelMetadataResponse::HasBitSetters::model_spec(const GetModelMetadataResponse* msg) {
  return *msg->model_spec_;
}
void GetModelMetadataResponse::unsafe_arena_set_allocated_model_spec(
    ::tensorflow::serving::ModelSpec* model_spec) {
  if (GetArenaNoVirtual() == nullptr) {
    delete model_spec_;
  }
  model_spec_ = model_spec;
  if (model_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.GetModelMetadataResponse.model_spec)
}
void GetModelMetadataResponse::clear_model_spec() {
  if (GetArenaNoVirtual() == nullptr && model_spec_ != nullptr) {
    delete model_spec_;
  }
  model_spec_ = nullptr;
}
void GetModelMetadataResponse::clear_metadata() {
  metadata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModelMetadataResponse::kModelSpecFieldNumber;
const int GetModelMetadataResponse::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModelMetadataResponse::GetModelMetadataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.GetModelMetadataResponse)
}
GetModelMetadataResponse::GetModelMetadataResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.GetModelMetadataResponse)
}
GetModelMetadataResponse::GetModelMetadataResponse(const GetModelMetadataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  if (from.has_model_spec()) {
    model_spec_ = new ::tensorflow::serving::ModelSpec(*from.model_spec_);
  } else {
    model_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.GetModelMetadataResponse)
}

void GetModelMetadataResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetModelMetadataResponse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
  model_spec_ = nullptr;
}

GetModelMetadataResponse::~GetModelMetadataResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.GetModelMetadataResponse)
  SharedDtor();
}

void GetModelMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete model_spec_;
}

void GetModelMetadataResponse::ArenaDtor(void* object) {
  GetModelMetadataResponse* _this = reinterpret_cast< GetModelMetadataResponse* >(object);
  (void)_this;
}
void GetModelMetadataResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetModelMetadataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetModelMetadataResponse& GetModelMetadataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetModelMetadataResponse_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void GetModelMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.GetModelMetadataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  if (GetArenaNoVirtual() == nullptr && model_spec_ != nullptr) {
    delete model_spec_;
  }
  model_spec_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetModelMetadataResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetModelMetadataResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tensorflow::serving::ModelSpec::_InternalParse;
        object = msg->mutable_model_spec();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<string, .google.protobuf.Any> metadata = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->metadata_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetModelMetadataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.GetModelMetadataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.Any> metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          GetModelMetadataResponse_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GetModelMetadataResponse_MetadataEntry_DoNotUse,
              ::std::string, ::google::protobuf::Any,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Any > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.GetModelMetadataResponse.MetadataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.GetModelMetadataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.GetModelMetadataResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetModelMetadataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.GetModelMetadataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::model_spec(this), output);
  }

  // map<string, .google.protobuf.Any> metadata = 2;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.GetModelMetadataResponse.MetadataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetModelMetadataResponse_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<GetModelMetadataResponse_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.GetModelMetadataResponse)
}

::google::protobuf::uint8* GetModelMetadataResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.GetModelMetadataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::model_spec(this), target);
  }

  // map<string, .google.protobuf.Any> metadata = 2;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.GetModelMetadataResponse.MetadataEntry.key");
      }
    };

    if (false &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetModelMetadataResponse_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<GetModelMetadataResponse_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        if (entry->GetArena() != nullptr) {
          entry.release();
        }
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.GetModelMetadataResponse)
  return target;
}

size_t GetModelMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.GetModelMetadataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.protobuf.Any> metadata = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<GetModelMetadataResponse_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      if (entry.get() != nullptr && entry->GetArena() != nullptr) {
        entry.release();
      }
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != nullptr && entry->GetArena() != nullptr) {
      entry.release();
    }
  }

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *model_spec_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetModelMetadataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.GetModelMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetModelMetadataResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetModelMetadataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.GetModelMetadataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.GetModelMetadataResponse)
    MergeFrom(*source);
  }
}

void GetModelMetadataResponse::MergeFrom(const GetModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.GetModelMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.has_model_spec()) {
    mutable_model_spec()->::tensorflow::serving::ModelSpec::MergeFrom(from.model_spec());
  }
}

void GetModelMetadataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.GetModelMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModelMetadataResponse::CopyFrom(const GetModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.GetModelMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelMetadataResponse::IsInitialized() const {
  return true;
}

void GetModelMetadataResponse::Swap(GetModelMetadataResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetModelMetadataResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void GetModelMetadataResponse::UnsafeArenaSwap(GetModelMetadataResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetModelMetadataResponse::InternalSwap(GetModelMetadataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  swap(model_spec_, other->model_spec_);
}

::google::protobuf::Metadata GetModelMetadataResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto);
  return ::file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::SignatureDefMap* Arena::CreateMaybeMessage< ::tensorflow::serving::SignatureDefMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::SignatureDefMap >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::GetModelMetadataRequest* Arena::CreateMaybeMessage< ::tensorflow::serving::GetModelMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::GetModelMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::GetModelMetadataResponse* Arena::CreateMaybeMessage< ::tensorflow::serving::GetModelMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::GetModelMetadataResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
